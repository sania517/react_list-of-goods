{"version":3,"sources":["components/Good/Good.js","components/GoodList/GoodList.js","components/StartButton/StartButton.js","components/ReverseButton/ReverseButton.js","components/SortByLetter/SortByLetter.js","components/ResetButton/ResetButton.js","components/SortByLengthButton/SortByLengthButton.js","components/Select/Select.js","components/ResetSelectionButton/ResetSelectionButton.js","App.js","index.js"],"names":["Good","props","className","children","GoodList","map","good","key","id","title","StartButton","type","onClick","ReverseButton","handler","reverse","SortByLetter","sort","item1","item2","localeCompare","ResetButton","SortByLengthButton","length","Select","onChange","event","target","value","selectedItem","ResetSelectionButton","preparedGoodsList","item","i","App","handlerStart","setState","prevState","isStart","handlerButton","orderedList","goods","handlerSelect","selectValue","newList","filter","selected","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b44d21ee.chunk.js","sourcesContent":["import React from 'react';\nimport './Good.css';\nimport PropTypes from 'prop-types';\n\nexport const Good = props => (\n  <li className=\"goods__item\">{props.children}</li>\n);\n\nGood.propTypes = {\n  children: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './GoodList.css';\nimport PropTypes from 'prop-types';\nimport { Good } from '../Good/Good';\n\nexport const GoodList = props => (\n  <ul className=\"goods\">\n    {props.children.map(good => (\n      <Good key={good.id}>{good.title}</Good>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = {\n  children: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './StartButton.css';\nimport PropTypes from 'prop-types';\n\nexport const StartButton = props => (\n  <button\n    type=\"button\"\n    onClick={props.children}\n  >\nClick to start\n  </button>\n);\n\nStartButton.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ReverseButton = (props) => {\n  const handlerClick = () => {\n    props.handler(props.children.reverse());\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handlerClick}\n    >\nReverse\n    </button>\n  );\n};\n\nReverseButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SortByLetter = (props) => {\n  const handlerClick = () => {\n    props.handler(props.children\n      .sort((item1, item2) => item1.title.localeCompare(item2.title)));\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handlerClick}\n    >\n      Sort by letter\n    </button>\n  );\n};\n\nSortByLetter.propTypes = {\n  handler: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResetButton = (props) => {\n  const handlerClick = () => {\n    props.handler(props.children.sort((item1, item2) => item1.id - item2.id));\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handlerClick}\n    >\n      Reset\n    </button>\n  );\n};\n\nResetButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SortByLengthButton = (props) => {\n  const handlerClick = () => {\n    props.handler(props.children\n      .sort((item1, item2) => item1.title.length - item2.title.length));\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handlerClick}\n    >\n      SortByLength\n    </button>\n  );\n};\n\nSortByLengthButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = (props) => {\n  const handler = (event) => {\n    props.children(event.target.value);\n  };\n\n  return (\n    <select onChange={handler} value={props.selectedItem}>\n      <option value=\"1\">length = 1</option>\n      <option value=\"2\">length = 2</option>\n      <option value=\"3\">length = 3</option>\n      <option value=\"4\">length = 4</option>\n      <option value=\"5\">length = 5</option>\n      <option value=\"6\">length = 6</option>\n      <option value=\"7\">length = 7</option>\n      <option value=\"8\">length = 8</option>\n      <option value=\"9\">length = 9</option>\n      <option value=\"10\">length = 10</option>\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  selectedItem: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResetSelectionButton = (props) => {\n  const handler = (event) => {\n    props.children('1');\n  };\n\n  return (\n    <button onClick={handler} type=\"button\">\n      Reset Select\n    </button>\n  );\n};\n\nResetSelectionButton.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList/GoodList';\nimport { StartButton } from './components/StartButton/StartButton';\nimport { ReverseButton } from './components/ReverseButton/ReverseButton';\nimport { SortByLetter } from './components/SortByLetter/SortByLetter';\nimport { ResetButton } from './components/ResetButton/ResetButton';\nimport { SortByLengthButton } from\n  './components/SortByLengthButton/SortByLengthButton';\nimport { Select } from './components/Select/Select';\nimport { ResetSelectionButton } from\n  './components/ResetSelectionButton/ResetSelectionButton';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoodsList = goodsFromServer.map((item, i) => ({\n  title: item, id: i,\n}));\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      goods: preparedGoodsList,\n      selected: 1,\n      isStart: false,\n    };\n  }\n\n  handlerStart = () => {\n    this.setState(prevState => ({ isStart: !prevState.isStart }));\n  }\n\n  handlerButton = (orderedList) => {\n    this.setState(() => ({ goods: orderedList }));\n  }\n\n  handlerSelect = (selectValue) => {\n    const newList = preparedGoodsList\n      .filter(item => item.title.length >= selectValue);\n\n    this.setState(() => ({\n      selected: selectValue, goods: newList,\n    }));\n  }\n\n  render() {\n    return this.state.isStart\n      ? (\n        <div className=\"App\">\n          <div className=\"App__list\">\n            <GoodList>{this.state.goods}</GoodList>\n          </div>\n          <div className=\"App__buttons\">\n            <ReverseButton handler={this.handlerButton}>\n              {this.state.goods}\n            </ReverseButton>\n            <SortByLetter handler={this.handlerButton}>\n              {this.state.goods}\n            </SortByLetter>\n            <ResetButton handler={this.handlerButton}>\n              {this.state.goods}\n            </ResetButton>\n            <SortByLengthButton handler={this.handlerButton}>\n              {this.state.goods}\n            </SortByLengthButton>\n            <Select selectedItem={this.state.selected}>\n              {this.handlerSelect}\n            </Select>\n            <ResetSelectionButton>{this.handlerSelect}</ResetSelectionButton>\n          </div>\n        </div>\n      )\n      : (<StartButton>{this.handlerStart}</StartButton>);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}